---
- name: "Install packages"
  ansible.builtin.yum:
    name:
      - postgresql
      - postgresql-server
      - python3-pip
      - python3-devel
      - python3-libs
      - python3-setuptools
      - postgresql-devel
      - python-psycopg2
    state: present

- name: "Install Python packages"
  ansible.builtin.pip:
    name: psycopg2
    state: present

- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_data

- name: "Initialize PostgreSQL"
  shell: "postgresql-setup initdb"
  when: not postgres_data.stat.exists

- name: "Start and enable services"
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes

- name: "Create app database"
  community.postgresql.postgresql_db:
    state: present
    name: "{{ db_name }}"
  become_user: postgres

- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become_user: postgres

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
  become_user: postgres

- name: "Allow md5 connection for the db user"
  postgresql_pg_hba:
    dest: "~/data/pg_hba.conf"
    contype: host
    databases: all
    method: md5
    users: "{{ db_user }}"
    create: true
  become_user: postgres

- name: "Start and enable services"
  ansible.builtin.service:
    name: postgresql
    state: restarted
    